# ==============================================================================
# FINANCIAL DASHBOARD MCP - ENVIRONMENT CONFIGURATION
# ==============================================================================
# Complete .env configuration template for the Financial Dashboard MCP project
# Copy this file to .env and customize the values for your environment

# ==============================================================================
# CORE CONFIGURATION
# ==============================================================================

# Database Configuration (REQUIRED)
# IMPORTANT: Never use default credentials in production!
# Generate strong passwords using: openssl rand -base64 32
DATABASE_URL=postgresql://financial_user:your-secure-password@localhost:5432/financial_dashboard
DATABASE_ECHO=False

# PostgreSQL Docker Configuration (REQUIRED for Docker Compose)
POSTGRES_USER=financial_user
POSTGRES_PASSWORD=your-secure-password-here  # Generate: openssl rand -base64 32
POSTGRES_DB=financial_dashboard

# Security (REQUIRED)
# CRITICAL: Generate strong keys for production using:
# python -c "import secrets; print(secrets.token_urlsafe(64))"
SECRET_KEY=CHANGE_ME_IN_PRODUCTION_USE_STRONG_RANDOM_KEY
# Generate MCP token: python -c "import secrets; print(secrets.token_urlsafe(32))"
MCP_AUTH_TOKEN=CHANGE_ME_IN_PRODUCTION_USE_STRONG_TOKEN
ACCESS_TOKEN_EXPIRE_MINUTES=43200  # 30 days

# Environment
ENVIRONMENT=development  # Options: development, production, test
DEBUG=True  # Set to False in production

# ==============================================================================
# SERVICE CONFIGURATION
# ==============================================================================

# Redis & Celery
REDIS_URL=redis://localhost:6379/0
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# API Configuration
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=True

# Frontend Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost
BACKEND_URL=http://localhost:8000

# MCP Server Configuration
MCP_SERVER_HOST=localhost
MCP_SERVER_PORT=8502

# Celery Monitoring (Flower UI at http://localhost:5555)
# IMPORTANT: Change these credentials in production!
FLOWER_USERNAME=admin
FLOWER_PASSWORD=CHANGE_ME_IN_PRODUCTION_USE_STRONG_PASSWORD  # Generate: openssl rand -base64 32

# ==============================================================================
# MARKET DATA PROVIDERS
# ==============================================================================

# Alpha Vantage (Optional - for real market data)
# Register for free API key at: https://www.alphavantage.co/support/#api-key
ALPHA_VANTAGE_API_KEY=YOUR_ALPHA_VANTAGE_API_KEY_HERE

# Finnhub (Optional - for real market data)
# Register for free API key at: https://finnhub.io/register
FINNHUB_API_KEY=YOUR_FINNHUB_API_KEY_HERE

# Yahoo Finance
YFINANCE_START_DATE=2020-01-01

# ==============================================================================
# PERFORMANCE & LIMITS
# ==============================================================================

# Rate Limiting (seconds between requests)
YFINANCE_RATE_LIMIT_DELAY=1.0
ALPHA_VANTAGE_RATE_LIMIT_DELAY=12.0
FINNHUB_RATE_LIMIT_DELAY=1.0
DEUTSCHE_BORSE_RATE_LIMIT_DELAY=2.0
BOERSE_FRANKFURT_RATE_LIMIT_DELAY=1.5

# Timeouts
DEFAULT_REQUEST_TIMEOUT=30
MAX_RETRIES=3
SESSION_TIMEOUT=3600  # 1 hour

# Cache Configuration (TTL in seconds)
MARKET_DATA_CACHE_TTL=300  # 5 minutes
PORTFOLIO_CACHE_TTL=600  # 10 minutes
ISIN_MAPPING_CACHE_TTL=86400  # 24 hours

# API Limits
MAX_API_LIMIT=1000
DEFAULT_API_LIMIT=100
DEFAULT_BATCH_SIZE=100
MAX_BATCH_SIZE=500

# ==============================================================================
# SCHEDULED TASKS
# ==============================================================================

# Celery Beat Schedule (seconds)
MARKET_DATA_UPDATE_INTERVAL=300  # 5 minutes
PORTFOLIO_SNAPSHOT_INTERVAL=3600  # 1 hour

# ==============================================================================
# ISIN SERVICE CONFIGURATION
# ==============================================================================

ISIN_BATCH_SIZE=50
ISIN_MAX_CONCURRENT_JOBS=3
ISIN_RETRY_ATTEMPTS=3
ISIN_RETRY_DELAY=5.0
ISIN_SYNC_CHECK_INTERVAL=60
ISIN_ERROR_SLEEP_INTERVAL=30

# ==============================================================================
# RISK & PORTFOLIO SETTINGS
# ==============================================================================

CONCENTRATION_WARNING_THRESHOLD=0.20  # 20%
CONCENTRATION_CRITICAL_THRESHOLD=0.25  # 25%
MIN_DIVERSIFICATION_ASSETS=5
RISK_FREE_RATE=0.02  # 2%

# ==============================================================================
# LOGGING
# ==============================================================================

LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR
LOG_FILE=logs/app.log

# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================

CORS_ORIGINS=["http://localhost:8501", "http://localhost:3000"]  # Set to ["*"] in development

# ==============================================================================
# DEMO ACCOUNTS
# ==============================================================================

DEMO_USERNAME=demo
DEMO_PASSWORD=demo123456

# ==============================================================================
# EXTERNAL API URLS (Advanced Configuration)
# ==============================================================================

ALPHA_VANTAGE_BASE_URL=https://www.alphavantage.co/query
FINNHUB_BASE_URL=https://finnhub.io/api/v1
XETRA_BASE_URL=https://www.xetra.com
XETRA_SEARCH_URL=https://www.xetra.com/xetra-en/instruments/shares
BOERSE_FRANKFURT_BASE_URL=https://www.boerse-frankfurt.de
BOERSE_FRANKFURT_QUOTE_URL=https://www.boerse-frankfurt.de/equity
USER_AGENT=Financial-Dashboard/1.0 (https://github.com/docdyhr/financial-dashboard-mcp)

# ==============================================================================
# QUICK START MINIMAL CONFIGURATION
# ==============================================================================
# For quick development setup, you only need these core variables:
#
# DATABASE_URL=postgresql://financial_user:password123@localhost:5432/financial_dashboard
# POSTGRES_USER=financial_user
# POSTGRES_PASSWORD=password123
# POSTGRES_DB=financial_dashboard
# SECRET_KEY=your-generated-secret-key-here
# MCP_AUTH_TOKEN=your-generated-mcp-token-here
# FLOWER_PASSWORD=flower123
# ENVIRONMENT=development
# DEBUG=True
#
# Generate secure keys using:
# python -c "import secrets; print('SECRET_KEY=' + secrets.token_urlsafe(64))"
# python -c "import secrets; print('MCP_AUTH_TOKEN=' + secrets.token_urlsafe(32))"
# openssl rand -base64 32  # For database and Flower passwords