"""Add cash accounts table

Revision ID: cd99d6a21c5f
Revises: add_isin_support
Create Date: 2025-06-16 23:48:31.116841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "cd99d6a21c5f"
down_revision: Union[str, None] = "add_isin_support"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cash_accounts",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("currency", sa.String(length=3), nullable=False),
        sa.Column("balance", sa.Numeric(precision=15, scale=2), nullable=False),
        sa.Column("account_name", sa.String(length=100), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cash_accounts_id"), "cash_accounts", ["id"], unique=False)
    op.drop_index(
        "idx_isin_validation_cache_country", table_name="isin_validation_cache"
    )
    op.drop_index("idx_isin_validation_cache_valid", table_name="isin_validation_cache")
    op.drop_table("isin_validation_cache")
    op.drop_index("idx_isin_mappings_active", table_name="isin_ticker_mappings")
    op.drop_index("idx_isin_mappings_exchange", table_name="isin_ticker_mappings")
    op.drop_index("idx_isin_mappings_isin", table_name="isin_ticker_mappings")
    op.drop_index("idx_isin_mappings_source", table_name="isin_ticker_mappings")
    op.drop_index("idx_isin_mappings_ticker", table_name="isin_ticker_mappings")
    op.drop_table("isin_ticker_mappings")
    op.drop_index("idx_assets_isin", table_name="assets")
    op.create_index(op.f("ix_assets_isin"), "assets", ["isin"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_assets_isin"), table_name="assets")
    op.create_index("idx_assets_isin", "assets", ["isin"], unique=False)
    op.create_table(
        "isin_ticker_mappings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("isin", sa.VARCHAR(length=12), autoincrement=False, nullable=False),
        sa.Column("ticker", sa.VARCHAR(length=20), autoincrement=False, nullable=False),
        sa.Column(
            "exchange_code", sa.VARCHAR(length=10), autoincrement=False, nullable=True
        ),
        sa.Column(
            "exchange_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "security_name", sa.VARCHAR(length=200), autoincrement=False, nullable=True
        ),
        sa.Column("currency", sa.VARCHAR(length=3), autoincrement=False, nullable=True),
        sa.Column("source", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column(
            "confidence",
            sa.DOUBLE_PRECISION(precision=53),
            server_default=sa.text("'1'::double precision"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "is_active",
            sa.BOOLEAN(),
            server_default=sa.text("true"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "last_updated",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.CheckConstraint(
            "isin::text ~ '^[A-Z]{2}[A-Z0-9]{9}[0-9]$'::text",
            name="isin_ticker_mappings_isin_format_check",
        ),
        sa.CheckConstraint(
            "confidence >= 0.0::double precision AND confidence <= 1.0::double precision",
            name="isin_ticker_mappings_confidence_check",
        ),
        sa.PrimaryKeyConstraint("id", name="isin_ticker_mappings_pkey"),
    )
    op.create_index(
        "idx_isin_mappings_ticker", "isin_ticker_mappings", ["ticker"], unique=False
    )
    op.create_index(
        "idx_isin_mappings_source", "isin_ticker_mappings", ["source"], unique=False
    )
    op.create_index(
        "idx_isin_mappings_isin", "isin_ticker_mappings", ["isin"], unique=False
    )
    op.create_index(
        "idx_isin_mappings_exchange",
        "isin_ticker_mappings",
        ["exchange_code"],
        unique=False,
    )
    op.create_index(
        "idx_isin_mappings_active", "isin_ticker_mappings", ["is_active"], unique=False
    )
    op.create_table(
        "isin_validation_cache",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("isin", sa.VARCHAR(length=12), autoincrement=False, nullable=False),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "country_code", sa.VARCHAR(length=2), autoincrement=False, nullable=True
        ),
        sa.Column(
            "country_name", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "national_code", sa.VARCHAR(length=9), autoincrement=False, nullable=True
        ),
        sa.Column(
            "check_digit", sa.VARCHAR(length=1), autoincrement=False, nullable=True
        ),
        sa.Column("validation_error", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "cached_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.CheckConstraint(
            "isin::text ~ '^[A-Z]{2}[A-Z0-9]{9}[0-9]$'::text",
            name="isin_validation_cache_isin_format_check",
        ),
        sa.PrimaryKeyConstraint("id", name="isin_validation_cache_pkey"),
        sa.UniqueConstraint("isin", name="uq_isin_validation_cache_isin"),
    )
    op.create_index(
        "idx_isin_validation_cache_valid",
        "isin_validation_cache",
        ["is_valid"],
        unique=False,
    )
    op.create_index(
        "idx_isin_validation_cache_country",
        "isin_validation_cache",
        ["country_code"],
        unique=False,
    )
    op.drop_index(op.f("ix_cash_accounts_id"), table_name="cash_accounts")
    op.drop_table("cash_accounts")
    # ### end Alembic commands ###
