repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-redis, types-psycopg2]
        args: [--ignore-missing-imports]
        exclude: ^(tests/|docs/|migrations/)

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-r', '-ll']
        files: ^(backend|frontend|mcp_server)/.*\.py$
        exclude: ^tests/

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Skip poetry-check since we're not using poetry package management
  # - repo: https://github.com/python-poetry/poetry
  #   rev: 1.7.0
  #   hooks:
  #     - id: poetry-check
  #       files: pyproject.toml
  #       pass_filenames: false

  - repo: local
    hooks:
      - id: check-version-consistency
        name: Check version consistency across files
        entry: python scripts/check_version_consistency.py
        language: python
        files: ^(pyproject\.toml|backend/__init__\.py)$
        pass_filenames: false

      - id: validate-docker-files
        name: Validate Docker files
        entry: bash -c 'for f in docker/Dockerfile.*; do docker run --rm -i hadolint/hadolint < "$f" || true; done'
        language: system
        files: ^docker/Dockerfile\..+$
        pass_filenames: false
